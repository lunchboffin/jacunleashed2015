<!DOCTYPE html>
<html>
  <head>
    <title>Leaflet GeoJSON Example</title>
    <meta charset="utf-8" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.css" />


  </head>
  <body>
    <div id="map" style="width: 1900px; height: 900px"></div>

    <script src="historic_places.geojson" type="text/javascript"></script>
    <script src="paepointsofinterest.geojson" type="text/javascript"></script>
    <script src="shipwrecks.geojson" type="text/javascript"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.3.min.js"></script>
    <script src="http://code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
	<link href='http://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css'>
	<link href='http://fonts.googleapis.com/css?family=Gloria+Hallelujah' rel='stylesheet' type='text/css'>
	<script src="leaflet-knn.min.js"></script>

		
	  <img src="duck_front.gif" id=player_image />
    <style>
	.mute{
			position:fixed;
			bottom:10px;
			left:10px;
			width:64px;
			height:64px;
		}
#player_image{
    position: absolute;
    height: 32px;
    width: 32px;
    top:calc(50% - 32px/2); /* height divided by 2*/
    left:calc(50% - 32px/2); /* width divided by 2*/
}
		.splash {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translateX(-50%) translateY(-50%);
			height:320px;
			width:220px;
			background-color:#fffff0;
			z-index:9999;
			font-family: 'Gloria Hallelujah', cursive;
			font-size:.9em;
			padding:15px 10px 10px 10px;
			cursor:default;
			
			/* paper curl */
				-webkit-box-shadow: 0 0 4px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
				-moz-box-shadow: 0 0 4px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
				box-shadow: 0 0 5px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
		}
	
      .info
      {
      /*padding: 6px 8px;
      font: 14px/16px Arial, Helvetica, sans-serif;
      background: white;
      background: rgba(255,255,255,0.8);
      box-shadow: 0 0 15px rgba(0,0,0,0.2);
      border-radius: 5px;*/
	  
			background-color:#fffff0;
			padding: 6px 8px;
			cursor:default;
			
			border-radius: 4px;
			
			/* paper curl */
			-webkit-box-shadow: 0 0 4px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
			-moz-box-shadow: 0 0 4px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
			box-shadow: 0 0 5px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
      }
      .info h4 {
      margin: 0 0 5px;
      color: #777;
      }

      .legend {
      text-align: left;
      line-height: 18px;
      color: #555;
      }
      .legend i {
      width: 18px;
      height: 18px;
      float: left;
      margin-right: 8px;
      opacity: 0.7;
      }
	  
	  .leaflet-popup-content-wrapper{
		background-color:#fffff0;
			cursor:default;
			border-radius: 4px;
			/* paper curl */
			-webkit-box-shadow: 0 0 4px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
			-moz-box-shadow: 0 0 4px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
			box-shadow: 0 0 5px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
	  }
	  
	  .leaflet-control-zoom{
		display:none;
	  }
    </style>
    <script>
	
		var audio = new Audio('ViceroyTeaWaltz3.mp3');
		audio.play();
	
      function UpdateScore()
      {
      $('#Score').text(FoundShips.length+" of "+Ships.features.length);
      }
      var FoundShips=[];
      var map = L.map('map').setView([  -35.11717100000, 137.49110200000], 17);
      map.options.minZoom=17;
      

      /*L.tileLayer('https://{s}.tiles.mapbox.com/v3/{id}/{z}/{x}/{y}.png', {
      maxZoom: 18,
      attribution: 'Map data &copy; <a href="httpx://openstreetmap.org">OpenStreetMap</a> contributors, ' +
      '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
      'Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
      id: 'examples.map-20v6611k'
      }).addTo(map);

            /*var MapQuestOpen_Aerial = L.tileLayer('http://otile{s}.mqcdn.com/tiles/1.0.0/{type}/{z}/{x}/{y}.{ext}', {
	type: 'sat',
	ext: 'jpg',
	attribution: 'Tiles Courtesy of <a href="http://www.mapquest.com/">MapQuest</a> &mdash; Portions Courtesy NASA/JPL-Caltech and U.S. Depart. of Agriculture, Farm Service Agency',
	subdomains: '1234'
      });

      MapQuestOpen_Aerial.addTo(map);

      var Esri_NatGeoWorldMap = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}', {
	attribution: 'Tiles &copy; Esri &mdash; National Geographic, Esri, DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, iPC',
	maxZoom: 16
      });

      Esri_NatGeoWorldMap.addTo(map);

      var Stamen_Watercolor = L.tileLayer('http://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png', {
	attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
	subdomains: 'abcd',
	minZoom: 1,
	maxZoom: 16,
	ext: 'png'
      });
var HERE_satelliteDay = L.tileLayer('http://{s}.{base}.maps.cit.api.here.com/maptile/2.1/maptile/{mapID}/satellite.day/{z}/{x}/{y}/256/png8?app_id={app_id}&app_code={app_code}', {
	attribution: 'Map &copy; 1987-2014 <a href="http://developer.here.com">HERE</a>',
	subdomains: '1234',
	mapID: 'newest',
	app_id: '<your app_id>',
	app_code: '<your app_code>',
	base: 'aerial',
	maxZoom: 20
});
      
            Stamen_Watercolor.addTo(map);
	  HERE_satelliteDay.addTo(map);

	  var NASAGIBS_ViirsEarthAtNight2012 = L.tileLayer('http://map1.vis.earthdata.nasa.gov/wmts-webmerc/VIIRS_CityLights_2012/default/{time}/{tilematrixset}{maxZoom}/{z}/{y}/{x}.{format}', {
	attribution: 'Imagery provided by services from the Global Imagery Browse Services (GIBS), operated by the NASA/GSFC/Earth Science Data and Information System (<a href="https://earthdata.nasa.gov">ESDIS</a>) with funding provided by NASA/HQ.',
	bounds: [[-85.0511287776, -179.999999975], [85.0511287776, 179.999999975]],
	minZoom: 1,
	maxZoom: 8,
	format: 'jpg',
	time: '',
	tilematrixset: 'GoogleMapsCompatible_Level'
	  });
	  NASAGIBS_ViirsEarthAtNight2012.addTo(map);

var OpenStreetMap_HOT = L.tileLayer('http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
	maxZoom: 19,
	attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, Tiles courtesy of <a href="http://hot.openstreetmap.org/" target="_blank">Humanitarian OpenStreetMap Team</a>'
	  });

	  	  var OpenSeaMap = L.tileLayer('http://tiles.openseamap.org/seamark/{z}/{x}/{y}.png', {
	attribution: 'Map data: &copy; <a href="http://www.openseamap.org">OpenSeaMap</a> contributors'
});

	  
	  var OpenSeaMap = L.tileLayer('http://tiles.openseamap.org/seamark/{z}/{x}/{y}.png', {
	attribution: 'Map data: &copy; <a href="http://www.openseamap.org">OpenSeaMap</a> contributors'
});

	  	  OpenSeaMap.addTo(map);

// https: also suppported.
var Stamen_TonerHybrid = L.tileLayer('http://stamen-tiles-{s}.a.ssl.fastly.net/toner-hybrid/{z}/{x}/{y}.png', {
	attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
	subdomains: 'abcd',
	minZoom: 0,
	maxZoom: 20,
	ext: 'png'
	  });

	  OpenStreetMap_HOT.addTo(map);
	  OpenSeaMap.addTo(map);
	  Stamen_TonerHybrid.addTo(map);
	  */

	  var mapid='csjac.44a74bbc';
	  var access_token='pk.eyJ1IjoiY3NqYWMiLCJhIjoiYjE2MzdhMzE3YzllZjJlZTI2YWE5YWZiNzRiNWE3YmMifQ.Q5u523dQ-tkBuaIHmVl9yg';
	 

	    var PirateMapLayers = L.tileLayer( 'http://api.tiles.mapbox.com/v4/'+mapid+'/{z}/{x}/{y}.png?access_token='+access_token, {
      maxZoom: 17,
      attribution: 'Imagery from <a href="http://mapbox.com/about/maps/">MapBox</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
      id: 'examples.map-20v6611k'
	  });
	  PirateMapLayers.addTo(map);


      var TreasureIcon1 = L.icon({
      iconUrl: 'shipwreck01.gif',
      iconSize: [32, 37],
      iconAnchor: [16, 37],
      popupAnchor: [0, -28]
      });
	  
	  var TreasureIcon2 = L.icon({
      iconUrl: 'shipwreck02.gif',
      iconSize: [32, 37],
      iconAnchor: [16, 37],
      popupAnchor: [0, -28]
      });
	  
	  var TreasureIcon3 = L.icon({
      iconUrl: 'shipwreck03.gif',
      iconSize: [32, 37],
      iconAnchor: [16, 37],
      popupAnchor: [0, -28]
      });

      var AnchorIcon = L.icon({
      iconUrl: 'anchor.png',
      iconSize: [32, 37],
      iconAnchor: [16, 37],
      popupAnchor: [0, -28]
      });

      var baseballIcon = L.icon({
      iconUrl: 'baseball.png',
      iconSize: [32, 37],
      iconAnchor: [16, 37],
      popupAnchor: [0, -28]
      });

      function onHistoricFeature(feature, layer) {
      var popupContent = 
		"<h1>"+feature.properties.TITLE+"</h1>"+
		"<p>"+feature.properties.DESCRIPTION+"</p>"+
		"<a href='"+feature.properties.MORE_INFORMATION+"' target=_blank>More Info</a>";

      if (feature.properties && feature.properties.popupContent) {
		popupContent += feature.properties.popupContent;
      }
		layer.bindPopup(popupContent);
      }

      function onPAE(feature, layer) {
      var popupContent = "<h1>"+feature.properties.Name+"</h1>";
      if(feature.properties.Web_URL !== undefined)
      {
		popupContent += "<a href='"+feature.properties.Web_URL+"' target=_blank>More Info</a>";
      }

      if (feature.properties && feature.properties.popupContent) {
		popupContent += feature.properties.popupContent;
      }

      layer.bindPopup(popupContent);
      }
      
      function foundFeature(e)
      {
		  if($.inArray(e.target._leaflet_id,FoundShips)!=-1)
		  {
		  }
		  else
		  {
			FoundShips.push(e.target._leaflet_id);
		  }
		  UpdateScore();
      }

      function onEachShipWreck(feature, layer) {
      var popupContent = 
		"<h1>"+feature.properties.WRECKNAME+"</h1>"+
		"<p>Rigging: "+feature.properties.RIGDESC+", Hull: "+feature.properties.HULLDESC+
		"<br/>"+
		"Lost at "+feature.properties.LOSSLOCATI+" on "+feature.properties.LOSSDATE+" cause: "+feature.properties.LOSSCAUSE+"</p>"+
		"<a href='"+feature.properties.MORE_INFORMATION+"' target=_blank>More Info</a>";

      if (feature.properties && feature.properties.popupContent) {
		popupContent += feature.properties.popupContent;
      }

      layer.bindPopup(popupContent);
		  layer.on({
			click: foundFeature
		  });
      }


	  /**
		 * Returns a random integer between min (inclusive) and max (inclusive)
		 * Using Math.round() will give you a non-uniform distribution!
		 */
		function getRandomInt(min, max) {
			return Math.floor(Math.random() * (max - min + 1)) + min;
		}


      var HistoricLayer = L.geoJson(HistoricPlaces, {

      pointToLayer: function (feature, latlng) {
      return L.marker(latlng, {icon: baseballIcon});
      },

      onEachFeature: onHistoricFeature
      }).addTo(map);

      var ShipsLayer = L.geoJson(Ships, {

      pointToLayer: function (feature, latlng) {
		switch(getRandomInt(0,2)){
			case 0:
				return L.marker(latlng, {icon: TreasureIcon1});
			case 1:
				return L.marker(latlng, {icon: TreasureIcon2});
			case 2:
				return L.marker(latlng, {icon: TreasureIcon3});
		}
      },

      onEachFeature: onEachShipWreck
      }).addTo(map);

      var PAELayer = L.geoJson(PAEPoI, {

      pointToLayer: function (feature, latlng) {
      return L.marker(latlng, {icon: AnchorIcon});
      },

      onEachFeature: onPAE
      }).addTo(map);

      var info = L.control();
      function CalcCheats(element)
      {
		  element.checked ? map.options.minZoom=0:map.options.minZoom=17;
		  $(".leaflet-control-zoom").show();
		  if(!element.checked)
		  {
			map.setZoom(map.options.minZoom);
			$(".leaflet-control-zoom").hide();
		  }
      }

      info.onAdd = function (map) {
		  this._div = L.DomUtil.create('div', 'info'); // create a div with a class "info"
		  this._div.innerHTML = 
		  '<button style="margin-bottom:4px;" onclick="$(\'.splash\').show();">Instructions</button><br />'+
		  '<div>Score: <span id="Score"></span></div>'+
		  '<input type=checkbox id=cheatcheck onchange="CalcCheats(this)" /><label for=cheatcheck>CHEATS</label>';
		  this._div.class = 'scorebox';
		  this.update();
		  
		  return this._div;
      };

      // method that we will use to update the control based on feature properties passed
      info.update = function (props) {
      
      };

      info.addTo(map);
      $( window ).resize(function() {
      ResizeWindow();
      });

      function ResizeWindow()
      {
		$("#map").width($(window).width()-20).height($(window).height()-20);
	  map.invalidateSize();
	 
      }
      ResizeWindow();


      UpdateScore();

	  function RenderRadar()
	  {
	  var nextship=leafletKnn(ShipsLayer).nearest(map.getCenter(),1, 5000);
	  var dirlat = nextship[0].lat - map.getCenter().lat;
	  var dirlan = nextship[0].lon - map.getCenter().lng;
	  var len = Math.sqrt(dirlat*dirlat+dirlan*dirlan);
	  dirlat /= len;
	  dirlan /= len;
	  dirlat *= 0.001;
	  dirlan *= 0.001;
	  var cntr=  map.getCenter();
	  var arrowpoint = new L.LatLng(cntr.lat+ dirlat, cntr.lng+dirlan);
	  
	  
	  var latlngs = [arrowpoint,map.getCenter()];
	  var polyline = L.polyline(latlngs, {color: 'red'}).addTo(map);
	  };
	  RenderRadar();
      
    </script>
	<div class="splash" onclick="$('.splash').hide();">
		Ahoy matey,<br /><div style="height:8px;"></div>
		It's Captain Chubberknuckles here. I have a crackerjack quest for ye to perform:<br /><div style="height:8px;"></div>
		Please find all of the sunken ships in South Australia, for booty!<br /><div style="height:16px;"></div>
		Yaarrr regards,<br /><div style="height:8px;"></div>
		<span style="font-family:'Pacifico', cursive;">The Cap'n</span>
		<div style="position:relative;top:9px;font-family:sans-serif;font-size:.8em;color:#D2B48C;text-align:center;width:100%;">(click to close)</div>
	</div>
	<div class="mute">
		<img class="audio_mute" src="mute.png" alt="mute" onclick="audio.pause();$('.audio_play').show();$('.audio_mute').hide();" />
		<img class="audio_play" src="audio.png" alt="audio" onclick="audio.play();$('.audio_mute').show();$('.audio_play').hide();" />
	</div>
  </body>
</html>
